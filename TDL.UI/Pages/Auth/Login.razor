@layout AuthLayout
@page "/"
@using System.ComponentModel.DataAnnotations
@using System.Text
@using TDL.UI.Models
@using static System.Net.Mime.MediaTypeNames
@inject NavigationManager Navigator
@inject HttpClient httpClient

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Login</h3>
                    <EditForm Model="@loginModel" OnValidSubmit="@LoginSubmit">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="email">Email address</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label for="password">Password</label>
                            <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Login</button>
                            <button type="button" class="btn btn-secondary" @onclick="ToRegister">Register</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task LoginSubmit()
    {
        var jsonBlog = JsonConvert.SerializeObject(loginModel);
        var content = new StringContent(jsonBlog, Encoding.UTF8, Application.Json);
        var response = await httpClient.PostAsync("api/Auth/Login", content);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Login success");
            Navigator.NavigateTo("/task");
        }
    }

    private void ToRegister()
    {
        Navigator.NavigateTo("/register");
    }
}
