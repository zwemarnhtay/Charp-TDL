@inject NavigationManager navigator
@inject TaskService taskService

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary my-3" data-bs-toggle="modal" data-bs-target="#exampleModal">
    <i class="fa-solid fa-plus fa-lg"></i> Add new task
</button>

<!-- Modal -->
@if (isFormVisible)
{
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">New Task</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <EditForm Model="@task" OnValidSubmit="@CreateTask">
                    <DataAnnotationsValidator />
                    <div class="modal-body">

                        <div class="mb-3">
                            <label for="title">Title</label>
                            <InputText type="text" class="form-control" id="title" @bind-Value="task.Title" placeholder="title" />
                            <ValidationMessage For="@(() => task.Title)" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="deadline">Deadline</label>
                            <input type="datetime-local" class="form-control" id="deadline" @bind="task.Deadline" placeholder="Deadline" />
                            <ValidationMessage For="@(() => task.Deadline)" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="description">Description</label>
                            <InputTextArea class="form-control" placeholder="..." id="description" @bind-Value="task.Description" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}


@code {
    private TaskCreateModel task = new TaskCreateModel();

    private bool isFormVisible = true;

    private async Task CreateTask()
    {
        var response = await taskService.CreateAsync(task);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("create success");

            isFormVisible = false;
        }
    }
}
